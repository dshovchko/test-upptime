name: SSL and Domain Check

on:
  schedule:
    - cron: "0 12 * * *" # daily at 12:00 UTC
  workflow_dispatch:

jobs:
  ssl-domain-check:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check SSL Certificate
        run: |
          echo "Checking SSL certificate for esl-ui.com..."
          
          # Check SSL certificate
          ssl_info=$(echo | openssl s_client -servername esl-ui.com -connect esl-ui.com:443 2>/dev/null | openssl x509 -noout -dates)
          echo "SSL Certificate info:"
          echo "$ssl_info"
          
          # Get expiry date
          expiry_date=$(echo "$ssl_info" | grep "notAfter" | cut -d= -f2)
          expiry_timestamp=$(date -d "$expiry_date" +%s)
          current_timestamp=$(date +%s)
          days_until_expiry=$(( (expiry_timestamp - current_timestamp) / 86400 ))
          
          echo "Days until SSL expiry: $days_until_expiry"
          
          if [ $days_until_expiry -lt 30 ]; then
            echo "⚠️ SSL certificate expires in $days_until_expiry days!"
            
            # Check if SSL issue already exists
            existing_ssl_issue=$(gh issue list --label "ssl" --state "open" --search "SSL Certificate Expiring Soon" --json number --jq '.[0].number' || echo "")
            
            if [ -z "$existing_ssl_issue" ]; then
              echo "Creating new SSL issue..."
              gh issue create \
                --title "⚠️ SSL Certificate Expiring Soon: esl-ui.com" \
                --body "SSL certificate for esl-ui.com expires in **$days_until_expiry days** (on $expiry_date).\n\nPlease renew the certificate before expiration." \
                --label "ssl,monitoring,urgent"
            else
              echo "SSL issue already exists (#$existing_ssl_issue), updating..."
              gh issue edit "$existing_ssl_issue" \
                --body "SSL certificate for esl-ui.com expires in **$days_until_expiry days** (on $expiry_date).\n\nPlease renew the certificate before expiration.\n\n*Updated: $(date)*"
            fi
            
            exit 1
          else
            echo "✅ SSL certificate is valid for $days_until_expiry more days"
            
            # Close existing SSL issues if certificate is valid
            existing_ssl_issue=$(gh issue list --label "ssl" --state "open" --search "SSL Certificate Expiring Soon" --json number --jq '.[0].number' || echo "")
            if [ -n "$existing_ssl_issue" ]; then
              echo "Closing resolved SSL issue #$existing_ssl_issue"
              gh issue close "$existing_ssl_issue" --comment "✅ SSL certificate is now valid for $days_until_expiry more days. Issue resolved."
            fi
          fi

      - name: Check Domain Expiry
        run: |
          echo "Checking domain expiry for esl-ui.com..."
          
          # Check domain via whois
          domain_info=$(whois esl-ui.com | grep -i "expir")
          echo "Domain expiry info:"
          echo "$domain_info"
          
          # Try to get domain expiry date
          expiry_line=$(whois esl-ui.com | grep -i "registry expiry date" | head -1)
          if [ -n "$expiry_line" ]; then
            expiry_date=$(echo "$expiry_line" | cut -d: -f2- | xargs)
            echo "Domain expires: $expiry_date"
            
            # Convert to timestamp (may need adaptation depending on format)
            expiry_timestamp=$(date -d "$expiry_date" +%s 2>/dev/null || echo "0")
            if [ "$expiry_timestamp" != "0" ]; then
              current_timestamp=$(date +%s)
              days_until_expiry=$(( (expiry_timestamp - current_timestamp) / 86400 ))
              
              echo "Days until domain expiry: $days_until_expiry"
              
              if [ $days_until_expiry -lt 60 ]; then
                echo "⚠️ Domain expires in $days_until_expiry days!"
                
                # Check if domain issue already exists
                existing_domain_issue=$(gh issue list --label "domain" --state "open" --search "Domain Expiring Soon" --json number --jq '.[0].number' || echo "")
                
                if [ -z "$existing_domain_issue" ]; then
                  echo "Creating new domain issue..."
                  gh issue create \
                    --title "⚠️ Domain Expiring Soon: esl-ui.com" \
                    --body "Domain esl-ui.com expires in **$days_until_expiry days** (on $expiry_date).\n\nPlease renew the domain before expiration." \
                    --label "domain,monitoring,urgent"
                else
                  echo "Domain issue already exists (#$existing_domain_issue), updating..."
                  gh issue edit "$existing_domain_issue" \
                    --body "Domain esl-ui.com expires in **$days_until_expiry days** (on $expiry_date).\n\nPlease renew the domain before expiration.\n\n*Updated: $(date)*"
                fi
                
                exit 1
              else
                echo "✅ Domain is valid for $days_until_expiry more days"
                
                # Close existing domain issues if domain is valid
                existing_domain_issue=$(gh issue list --label "domain" --state "open" --search "Domain Expiring Soon" --json number --jq '.[0].number' || echo "")
                if [ -n "$existing_domain_issue" ]; then
                  echo "Closing resolved domain issue #$existing_domain_issue"
                  gh issue close "$existing_domain_issue" --comment "✅ Domain is now valid for $days_until_expiry more days. Issue resolved."
                fi
              fi
            fi
          else
            echo "Could not determine domain expiry date"
          fi